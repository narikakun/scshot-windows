<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>